services:
  bff:
    build:
      context: .
      dockerfile: Dockerfile.bff
    ports:
      - "3001:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - raven-network
  
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: Dockerfile.auth
    ports:
      - "80:8080"
      - "443:443"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "https://+:443;http://+:8080"
    networks:
      - raven-network
    depends_on:
      postgres:
        condition: service_healthy

  message:
    container_name: message
    build:
      context: .
      dockerfile: Dockerfile.message
    ports:
      - "6001:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - raven-network
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: mongod --quiet --logpath /dev/null
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: "messages"
    networks:
      - raven-network

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "raven"
      POSTGRES_USER: "raven"
      POSTGRES_PASSWORD: "raven"
    networks:
      - raven-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "raven" ]
      interval: 2s
      timeout: 2s
      retries: 20

networks:
  raven-network:
    driver: bridge
    